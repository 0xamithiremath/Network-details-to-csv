import re
import csv

def parse_command_output(file_path):
    """
    Reads command output from a file and extracts relevant information.

    :param file_path: Path to the file containing the output of the 'show interfaces switchport' command.
    :return: List of dictionaries containing extracted data for each interface.
    """
    # Read the command output from the file
    with open(file_path, 'r') as file:
        output = file.read()

    # Split the output into sections for each interface
    interface_sections = re.split(r'\n\n+', output.strip())

    # Define the keys to extract
    keys = [
        'Name', 'Operational Mode', 'Switchport', 
        'Negotiation of Trunking', 'Access Mode VLAN', 
        'Trunking Native Mode VLAN', 'Trunking VLANs Enabled', 'Voice VLAN'
    ]

    # List to store parsed data
    data = []

    # Process each section
    for section in interface_sections:
        interface_data = {}

        for line in section.split('\n'):
            parts = line.split(': ')
            if len(parts) == 2:
                key, value = parts
                if key in keys:
                    interface_data[key] = value
        
        if interface_data:
            data.append(interface_data)
    
    return data

def write_to_csv(data, filename):
    """
    Writes parsed data to a CSV file.

    :param data: List of dictionaries containing interface data.
    :param filename: String specifying the filename for the CSV file.
    """
    with open(filename, mode='w', newline='') as file:
        writer = csv.DictWriter(file, fieldnames=data[0].keys())
        writer.writeheader()
        writer.writerows(data)

# Path to the text file containing the command output
input_file_path = 'D:\Code\switchport_output.txt'
parsed_data = parse_command_output(input_file_path)
csv_filename = 'cisco_switch_interfaces_switchport.csv'
write_to_csv(parsed_data, csv_filename)
